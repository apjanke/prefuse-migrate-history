head	2.0;
access;
symbols
	java_1_5:2.0.0.4
	Root_java_1_5:2.0
	beta:2.0.0.2
	beta-20080113:2.0
	beta-20071021:2.0
	beta-20060220:2.0
	beta-20060209:2.0;
locks; strict;
comment	@# @;


2.0
date	2006.02.12.18.23.45;	author jheer;	state Exp;
branches
	2.0.4.1;
next	1.1;

1.1
date	2005.12.30.09.13.30;	author jheer;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.12.30.09.13.30;	author jheer;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2006.01.23.23.07.17;	author jheer;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2006.01.30.09.08.04;	author jheer;	state Exp;
branches;
next	;

2.0.4.1
date	2008.01.23.23.55.44;	author jogiles;	state Exp;
branches;
next	;


desc
@@


2.0
log
@Merge beta branch back onto main trunk
@
text
@package prefuse.render;

import prefuse.visual.VisualItem;

/**
 * The RendererFactory is responsible for providing the proper Renderer
 * instance for drawing a given VisualItem.
 * 
 * @@author <a href="http://jheer.org">jeffrey heer</a>
 */
public interface RendererFactory {

    /**
     * Return a Renderer instance to draw the given VisualItem.
     * @@param item the item for which to retrieve the renderer
     * @@return the Renderer for the given VisualItem
     */
    public Renderer getRenderer(VisualItem item);

} // end of interface RendererFactory
@


2.0.4.1
log
@First import of a Java 1.5-targetted version of prefuse.
@
text
@d8 1
a8 1
 *
d18 1
a18 1
    public Renderer getRenderer(VisualItem<?> item);
@


1.1
log
@file RendererFactory.java was initially added on branch beta.
@
text
@d1 20
@


1.1.2.1
log
@Initial commit of prefuse beta
@
text
@a0 21
package prefuse.render;

import prefuse.visual.VisualItem;

/**
 * The RendererFactory is responsible for providing the proper Renderer
 * instance for drawing a given VisualItem.
 * 
 * @@version 1.0
 * @@author <a href="http://jheer.org">jeffrey heer</a> prefuse(AT)jheer.org
 */
public interface RendererFactory {

	/**
	 * Return a Renderer instance to draw the given VisualItem.
	 * @@param item the item for which to retrieve the renderer
	 * @@return the Renderer for the given VisualItem
	 */
	public Renderer getRenderer(VisualItem item);

} // end of interface RendererFactory
@


1.1.2.2
log
@Replaced all tab characters with 4 spaces.
Ensured UNIX style line endings.
@
text
@d14 6
a19 6
    /**
     * Return a Renderer instance to draw the given VisualItem.
     * @@param item the item for which to retrieve the renderer
     * @@return the Renderer for the given VisualItem
     */
    public Renderer getRenderer(VisualItem item);
@


1.1.2.3
log
@Much more javadoc
@
text
@d9 2
a10 1
 * @@author <a href="http://jheer.org">jeffrey heer</a>
@


