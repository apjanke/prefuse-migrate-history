head	2.0;
access;
symbols
	java_1_5:2.0.0.4
	Root_java_1_5:2.0
	beta:2.0.0.2
	beta-20080113:2.0
	beta-20071021:2.0
	beta-20060220:2.0
	beta-20060209:2.0;
locks; strict;
comment	@# @;


2.0
date	2006.02.12.18.23.42;	author jheer;	state Exp;
branches
	2.0.4.1;
next	1.1;

1.1
date	2005.12.30.09.16.20;	author jheer;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.12.30.09.16.20;	author jheer;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2006.01.23.23.07.20;	author jheer;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2006.01.27.09.05.19;	author jheer;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2006.02.02.19.01.52;	author jheer;	state Exp;
branches;
next	;

2.0.4.1
date	2008.01.23.23.55.45;	author jogiles;	state Exp;
branches;
next	;


desc
@@


2.0
log
@Merge beta branch back onto main trunk
@
text
@package prefuse.action.animate;

import java.awt.Font;

import prefuse.action.ItemAction;
import prefuse.util.FontLib;
import prefuse.visual.VisualItem;


/**
 * Animator that interpolates between starting and ending Fonts for VisualItems
 * during an animation. Font sizes are interpolated linearly. If the
 * animation fraction is under 0.5, the face and style of the starting
 * font are used, otherwise the face and style of the second font are
 * applied.
 * 
 * @@author <a href="http://jheer.org">jeffrey heer</a>
 */
public class FontAnimator extends ItemAction {

    /**
     * Create a new FontAnimator that processes all data groups.
     */
    public FontAnimator() {
        super();
    }

    /**
     * Create a new FontAnimator that processes the specified group.
     * @@param group the data group to process.
     */
    public FontAnimator(String group) {
        super(group);
    }

    /**
     * @@see prefuse.action.ItemAction#process(prefuse.visual.VisualItem, double)
     */
    public void process(VisualItem item, double frac) {
        Font f1 = item.getStartFont(), f2 = item.getEndFont();
        item.setFont(FontLib.getIntermediateFont(f1,f2,frac));
    }

} // end of class FontAnimator
@


2.0.4.1
log
@First import of a Java 1.5-targetted version of prefuse.
@
text
@d16 1
a16 1
 *
d39 1
a39 2
    @@Override
	public void process(VisualItem<?> item, double frac) {
@


1.1
log
@file FontAnimator.java was initially added on branch beta.
@
text
@d1 44
@


1.1.2.1
log
@Initial commit of prefuse beta
@
text
@a0 38
package prefuse.action.animate;

import java.awt.Font;

import prefuse.action.ItemAction;
import prefuse.util.FontLib;
import prefuse.visual.VisualItem;


/**
 * Interpolates between starting and ending Fonts for VisualItems
 * during an animation. Font sizes are interpolated linearly. If the
 * animation fraction is under 0.5, the face and style of the starting
 * font are used, otherwise the face and style of the second font are
 * applied.
 * 
 * @@version 1.0
 * @@author <a href="http://jheer.org">Jeffrey Heer</a> prefuse(AT)jheer.org
 */
public class FontAnimator extends ItemAction {

    public FontAnimator() {
        super();
    }
    
	public FontAnimator(String group) {
        super(group);
    }

    /**
	 * @@see prefuse.action.Action#run(prefuse.a_old.ItemRegistry, double)
	 */
	public void process(VisualItem item, double frac) {
        Font f1 = item.getStartFont(), f2 = item.getEndFont();
        item.setFont(FontLib.getIntermediateFont(f1,f2,frac));
	}

} // end of class FontAnimator
@


1.1.2.2
log
@Replaced all tab characters with 4 spaces.
Ensured UNIX style line endings.
@
text
@d26 1
a26 1
    public FontAnimator(String group) {
d31 3
a33 3
     * @@see prefuse.action.Action#run(prefuse.a_old.ItemRegistry, double)
     */
    public void process(VisualItem item, double frac) {
d36 1
a36 1
    }
@


1.1.2.3
log
@Lots of javadoc
@
text
@d11 1
a11 1
 * Animator that interpolates between starting and ending Fonts for VisualItems
d17 2
a18 1
 * @@author <a href="http://jheer.org">jeffrey heer</a> prefuse(AT)jheer.org
a21 3
    /**
     * Create a new FontAnimator that processes all data groups.
     */
d25 1
a25 5

    /**
     * Create a new FontAnimator that processes the specified group.
     * @@param group the data group to process.
     */
d31 1
a31 1
     * @@see prefuse.action.ItemAction#process(prefuse.visual.VisualItem, double)
@


1.1.2.4
log
@Standardized @@author tag contents
Added toggle for enabling/disabling damage/redraw
EdgeRenderer now cleanly pulls edge widths from the size field
Refactored TupleManager to a single reusable class
@
text
@d17 1
a17 1
 * @@author <a href="http://jheer.org">jeffrey heer</a>
@


