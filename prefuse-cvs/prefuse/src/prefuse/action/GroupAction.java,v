head	2.0;
access;
symbols
	java_1_5:2.0.0.4
	Root_java_1_5:2.0
	beta:2.0.0.2
	beta-20080113:2.0
	beta-20071021:2.0
	beta-20060220:2.0
	beta-20060209:2.0;
locks; strict;
comment	@# @;


2.0
date	2006.02.12.18.23.42;	author jheer;	state Exp;
branches
	2.0.4.1;
next	1.1;

1.1
date	2005.12.30.09.16.20;	author jheer;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.12.30.09.16.20;	author jheer;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2006.01.27.09.05.19;	author jheer;	state Exp;
branches;
next	;

2.0.4.1
date	2008.01.23.23.55.45;	author jogiles;	state Exp;
branches;
next	;


desc
@@


2.0
log
@Merge beta branch back onto main trunk
@
text
@package prefuse.action;

import prefuse.Visualization;

/**
 * An Action that can be parameterized to process a particular group of items.
 * 
 * @@author <a href="http://jheer.org">jeffrey heer</a>
 */
public abstract class GroupAction extends Action {

    /** A reference to the group to be processed by this Action */
    protected String m_group;
    
    /**
     * Create a new GroupAction that processes all groups.
     * @@see prefuse.Visualization#ALL_ITEMS
     */
    public GroupAction() {
        this((Visualization)null);
    }

    /**
     * Create a new GroupAction that processes all groups.
     * @@param vis the {@@link prefuse.Visualization} to process
     * @@see prefuse.Visualization#ALL_ITEMS
     */
    public GroupAction(Visualization vis) {
        this(vis, Visualization.ALL_ITEMS);
    }
    
    /**
     * Create a new GroupAction that processes all groups.
     * @@param vis the {@@link prefuse.Visualization} to process
     * @@param duration the duration of this Action
     * @@see prefuse.Visualization#ALL_ITEMS
     */
    public GroupAction(Visualization vis, long duration) {
        this(vis, Visualization.ALL_ITEMS, duration);
    }
    
    /**
     * Create a new GroupAction that processes all groups.
     * @@param vis the {@@link prefuse.Visualization} to process
     * @@param duration the duration of this Action
     * @@param stepTime the time to wait between invocations of this Action
     * @@see prefuse.Visualization#ALL_ITEMS
     */
    public GroupAction(Visualization vis, long duration, long stepTime) {
        this(vis, Visualization.ALL_ITEMS, duration, stepTime);
    }
    
    /**
     * Create a new GroupAction that processes the specified group.
     * @@param group the name of the group to process
     */
    public GroupAction(String group) {
        this(null, group);
    }
    
    /**
     * Create a new GroupAction that processes the specified group.
     * @@param group the name of the group to process
     * @@param duration the duration of this Action
     */
    public GroupAction(String group, long duration) {
        this(null, group, duration);
    }
    
    /**
     * Create a new GroupAction that processes the specified group.
     * @@param group the name of the group to process
     * @@param duration the duration of this Action
     * @@param stepTime the time to wait between invocations of this Action
     */
    public GroupAction(String group, long duration, long stepTime) {
        this(null, group, duration, stepTime);
    }
    
    /**
     * Create a new GroupAction that processes the specified group.
     * @@param vis the {@@link prefuse.Visualization} to process
     * @@param group the name of the group to process
     */
    public GroupAction(Visualization vis, String group) {
        super(vis);
        m_group = group;
    }
    
    /**
     * Create a new GroupAction that processes the specified group.
     * @@param vis the {@@link prefuse.Visualization} to process
     * @@param group the name of the group to process
     * @@param duration the duration of this Action
     */
    public GroupAction(Visualization vis, String group, long duration) {
        super(vis, duration);
        m_group = group;
    }
    
    /**
     * Create a new GroupAction that processes the specified group.
     * @@param vis the {@@link prefuse.Visualization} to process
     * @@param group the name of the group to process
     * @@param duration the duration of this Action
     * @@param stepTime the time to wait between invocations of this Action
     */
    public GroupAction(Visualization vis, String group,
                       long duration, long stepTime)
    {
        super(vis, duration, stepTime);
        m_group = group;
    }

    // ------------------------------------------------------------------------
    
    /**
     * Get the name of the group to be processed by this Action.
     * @@return the name of the group to process
     */
    public String getGroup() {
        return m_group;
    }

    /**
     * Sets the name of the group to be processed by this Action.
     * @@param group the name of the group to process
     */
    public void setGroup(String group) {
        m_group = group;
    }
    
    // ------------------------------------------------------------------------
    
    /**
     * @@see prefuse.action.Action#run(double)
     */
    public abstract void run(double frac);

} // end of class GroupAction
@


2.0.4.1
log
@First import of a Java 1.5-targetted version of prefuse.
@
text
@d7 1
a7 1
 *
d14 1
a14 1

d31 1
a31 1

d41 1
a41 1

d52 1
a52 1

d60 1
a60 1

d69 1
a69 1

d79 1
a79 1

d89 1
a89 1

d100 1
a100 1

d116 1
a116 1

d132 1
a132 1

d134 1
a134 1

d138 1
a138 2
    @@Override
	public abstract void run(double frac);
@


1.1
log
@file GroupAction.java was initially added on branch beta.
@
text
@d1 140
@


1.1.2.1
log
@Initial commit of prefuse beta
@
text
@a0 76
package prefuse.action;

import prefuse.Visualization;

/**
 * An Action that can be parameterized to process a particular group of items.
 * 
 * @@author <a href="http://jheer.org">jeffrey heer</a> - prefuse(AT)jheer.org
 */
public abstract class GroupAction extends Action {

    protected String m_group;
    
    public GroupAction() {
        this((Visualization)null);
    }
    
    public GroupAction(Visualization vis) {
        this(vis, Visualization.ALL_ITEMS);
    }
    
    public GroupAction(String group) {
        this(null, group);
    }

    public GroupAction(Visualization vis, long duration) {
        this(vis, Visualization.ALL_ITEMS, duration);
    }
    
    public GroupAction(String group, long duration) {
        this(null, group, duration);
    }
    
    public GroupAction(Visualization vis, long duration, long stepTime) {
        this(vis, Visualization.ALL_ITEMS, duration, stepTime);
    }
    
    public GroupAction(String group, long duration, long stepTime) {
        this(null, group, duration, stepTime);
    }
    
    public GroupAction(Visualization vis, String group) {
        super(vis);
        m_group = group;
    }
    
    public GroupAction(Visualization vis, String group, long duration) {
        super(vis, duration);
        m_group = group;
    }
    
    public GroupAction(Visualization vis, String group,
                       long duration, long stepTime)
    {
        super(vis, duration, stepTime);
        m_group = group;
    }

    // ------------------------------------------------------------------------
    
    public String getGroup() {
        return m_group;
    }
    
    public void setGroup(String group) {
        m_group = group;
    }
    
    // ------------------------------------------------------------------------
    
    /**
     * @@see prefuse.action.Action#run(double)
     */
    public abstract void run(double frac);

} // end of class GroupAction
@


1.1.2.2
log
@Lots of javadoc
@
text
@d8 1
a8 1
 * @@author <a href="http://jheer.org">jeffrey heer</a>
a11 1
    /** A reference to the group to be processed by this Action */
a13 4
    /**
     * Create a new GroupAction that processes all groups.
     * @@see prefuse.Visualization#ALL_ITEMS
     */
d17 1
a17 6

    /**
     * Create a new GroupAction that processes all groups.
     * @@param vis the {@@link prefuse.Visualization} to process
     * @@see prefuse.Visualization#ALL_ITEMS
     */
d22 4
a25 6
    /**
     * Create a new GroupAction that processes all groups.
     * @@param vis the {@@link prefuse.Visualization} to process
     * @@param duration the duration of this Action
     * @@see prefuse.Visualization#ALL_ITEMS
     */
d30 4
a33 7
    /**
     * Create a new GroupAction that processes all groups.
     * @@param vis the {@@link prefuse.Visualization} to process
     * @@param duration the duration of this Action
     * @@param stepTime the time to wait between invocations of this Action
     * @@see prefuse.Visualization#ALL_ITEMS
     */
a37 23
    /**
     * Create a new GroupAction that processes the specified group.
     * @@param group the name of the group to process
     */
    public GroupAction(String group) {
        this(null, group);
    }
    
    /**
     * Create a new GroupAction that processes the specified group.
     * @@param group the name of the group to process
     * @@param duration the duration of this Action
     */
    public GroupAction(String group, long duration) {
        this(null, group, duration);
    }
    
    /**
     * Create a new GroupAction that processes the specified group.
     * @@param group the name of the group to process
     * @@param duration the duration of this Action
     * @@param stepTime the time to wait between invocations of this Action
     */
a41 5
    /**
     * Create a new GroupAction that processes the specified group.
     * @@param vis the {@@link prefuse.Visualization} to process
     * @@param group the name of the group to process
     */
a46 6
    /**
     * Create a new GroupAction that processes the specified group.
     * @@param vis the {@@link prefuse.Visualization} to process
     * @@param group the name of the group to process
     * @@param duration the duration of this Action
     */
a51 7
    /**
     * Create a new GroupAction that processes the specified group.
     * @@param vis the {@@link prefuse.Visualization} to process
     * @@param group the name of the group to process
     * @@param duration the duration of this Action
     * @@param stepTime the time to wait between invocations of this Action
     */
a60 4
    /**
     * Get the name of the group to be processed by this Action.
     * @@return the name of the group to process
     */
d64 1
a64 5

    /**
     * Sets the name of the group to be processed by this Action.
     * @@param group the name of the group to process
     */
@


