head	2.0;
access;
symbols
	java_1_5:2.0.0.4
	Root_java_1_5:2.0
	beta:2.0.0.2
	beta-20080113:2.0
	beta-20071021:2.0
	beta-20060220:2.0
	beta-20060209:2.0;
locks; strict;
comment	@# @;


2.0
date	2006.02.12.18.23.46;	author jheer;	state Exp;
branches
	2.0.4.1;
next	1.1;

1.1
date	2006.01.24.02.29.22;	author jheer;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2006.01.24.02.29.22;	author jheer;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2006.01.30.09.08.06;	author jheer;	state Exp;
branches;
next	;

2.0.4.1
date	2008.01.23.23.55.38;	author jogiles;	state Exp;
branches;
next	;


desc
@@


2.0
log
@Merge beta branch back onto main trunk
@
text
@package prefuse.visual.expression;

import prefuse.data.expression.ColumnExpression;
import prefuse.data.expression.Expression;
import prefuse.data.expression.Function;
import prefuse.data.expression.NotPredicate;
import prefuse.data.expression.Predicate;
import prefuse.visual.VisualItem;

/**
 * Expression that indicates if an item is currently under the mouse
 * pointer.
 * 
 * @@author <a href="http://jheer.org">jeffrey heer</a>
 */
public class HoverPredicate extends ColumnExpression
    implements Predicate, Function
{
    /** Convenience instance for the hover == true case. */
    public static final Predicate TRUE = new HoverPredicate();
    /** Convenience instance for the hover == false case. */
    public static final Predicate FALSE = new NotPredicate(TRUE);
    
    /**
     * Create a new HoverPredicate.
     */
    public HoverPredicate() {
        super(VisualItem.HOVER);
    }

    /**
     * @@see prefuse.data.expression.Function#getName()
     */
    public String getName() {
        return "HOVER";
    }

    /**
     * @@see prefuse.data.expression.Function#addParameter(prefuse.data.expression.Expression)
     */
    public void addParameter(Expression e) {
        throw new IllegalStateException("This function takes 0 parameters");
    }

    /**
     * @@see prefuse.data.expression.Function#getParameterCount()
     */
    public int getParameterCount() {
        return 0;
    }
    
    /**
     * @@see java.lang.Object#toString()
     */
    public String toString() {
        return getName()+"()";
    }

} // end of class HoverPredicate
@


2.0.4.1
log
@First import of a Java 1.5-targetted version of prefuse.
@
text
@d13 1
a13 1
 *
d23 1
a23 1

d51 1
a51 1

d55 1
a55 2
    @@Override
	public String toString() {
@


1.1
log
@file HoverPredicate.java was initially added on branch beta.
@
text
@d1 59
@


1.1.2.1
log
@Added hover predicate
@
text
@a0 39
package prefuse.visual.expression;

import prefuse.data.expression.ColumnExpression;
import prefuse.data.expression.Expression;
import prefuse.data.expression.Function;
import prefuse.data.expression.NotPredicate;
import prefuse.data.expression.Predicate;
import prefuse.visual.VisualItem;

/**
 * @@author <a href="http://jheer.org">jeffrey heer</a> - prefuse(AT)jheer.org
 */
public class HoverPredicate extends ColumnExpression
    implements Predicate, Function
{
    public static final Predicate TRUE = new HoverPredicate();
    public static final Predicate FALSE = new NotPredicate(TRUE);
    
    public HoverPredicate() {
        super(VisualItem.HOVER);
    }

    public String getName() {
        return "HOVER";
    }

    public void addParameter(Expression e) {
        throw new IllegalStateException("This function takes 0 parameters");
    }

    public int getParameterCount() {
        return 0;
    }
    
    public String toString() {
        return getName()+"()";
    }

} // end of class HoverPredicate
@


1.1.2.2
log
@Much more javadoc
@
text
@d11 1
a11 4
 * Expression that indicates if an item is currently under the mouse
 * pointer.
 * 
 * @@author <a href="http://jheer.org">jeffrey heer</a>
a15 1
    /** Convenience instance for the hover == true case. */
a16 1
    /** Convenience instance for the hover == false case. */
a18 3
    /**
     * Create a new HoverPredicate.
     */
a22 3
    /**
     * @@see prefuse.data.expression.Function#getName()
     */
a26 3
    /**
     * @@see prefuse.data.expression.Function#addParameter(prefuse.data.expression.Expression)
     */
a30 3
    /**
     * @@see prefuse.data.expression.Function#getParameterCount()
     */
a34 3
    /**
     * @@see java.lang.Object#toString()
     */
@


