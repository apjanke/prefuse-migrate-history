head	2.0;
access;
symbols
	java_1_5:2.0.0.4
	Root_java_1_5:2.0
	beta:2.0.0.2
	beta-20080113:2.0
	beta-20071021:2.0
	beta-20060220:2.0
	beta-20060209:2.0;
locks; strict;
comment	@# @;


2.0
date	2006.02.12.18.23.46;	author jheer;	state Exp;
branches
	2.0.4.1;
next	1.1;

1.1
date	2005.12.30.09.16.19;	author jheer;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2005.12.30.09.16.19;	author jheer;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2006.01.23.23.07.18;	author jheer;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2006.01.30.09.08.06;	author jheer;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2006.02.02.19.01.52;	author jheer;	state Exp;
branches;
next	;

2.0.4.1
date	2008.01.23.23.55.38;	author jogiles;	state Exp;
branches;
next	;


desc
@@


2.0
log
@Merge beta branch back onto main trunk
@
text
@package prefuse.visual.expression;

import prefuse.data.expression.ColumnExpression;
import prefuse.data.expression.Expression;
import prefuse.data.expression.Function;
import prefuse.data.expression.NotPredicate;
import prefuse.data.expression.Predicate;
import prefuse.visual.VisualItem;

/**
 * Expression that indicates if an item's validated flag is set.
 * 
 * @@author <a href="http://jheer.org">jeffrey heer</a>
 */
public class ValidatedPredicate extends ColumnExpression
    implements Predicate, Function
{
    /** Convenience instance for the validated == true case. */
    public static final Predicate TRUE = new ValidatedPredicate();
    /** Convenience instance for the validated == false case. */
    public static final Predicate FALSE = new NotPredicate(TRUE);
    
    /**
     * Create a new ValidatedPredicate.
     */
    public ValidatedPredicate() {
        super(VisualItem.VALIDATED);
    }
    
    /**
     * @@see prefuse.data.expression.Function#getName()
     */
    public String getName() {
        return "VALIDATED";
    }

    /**
     * @@see prefuse.data.expression.Function#addParameter(prefuse.data.expression.Expression)
     */
    public void addParameter(Expression e) {
        throw new IllegalStateException("This function takes 0 parameters");
    }

    /**
     * @@see prefuse.data.expression.Function#getParameterCount()
     */
    public int getParameterCount() {
        return 0;
    }
    
    /**
     * @@see java.lang.Object#toString()
     */
    public String toString() {
        return getName()+"()";
    }

} // end of class ValidatedPredicate
@


2.0.4.1
log
@First import of a Java 1.5-targetted version of prefuse.
@
text
@d12 1
a12 1
 *
d22 1
a22 1

d29 1
a29 1

d50 1
a50 1

d54 1
a54 2
    @@Override
	public String toString() {
@


1.1
log
@file ValidatedPredicate.java was initially added on branch beta.
@
text
@d1 58
@


1.1.2.1
log
@Initial commit of prefuse beta
@
text
@a0 40
package prefuse.visual.expression;

import prefuse.data.expression.ColumnExpression;
import prefuse.data.expression.Expression;
import prefuse.data.expression.Function;
import prefuse.data.expression.NotPredicate;
import prefuse.data.expression.Predicate;
import prefuse.visual.VisualItem;

/**
 * @@author <a href="http://jheer.org">jeffrey heer</a> - prefuse(AT)jheer.org
 */
public class ValidatedPredicate extends ColumnExpression
    implements Predicate, Function
{
    
    public static final Predicate TRUE = new ValidatedPredicate();
    public static final Predicate FALSE = new NotPredicate(TRUE);
    
    public ValidatedPredicate() {
        super(VisualItem.VALIDATED);
    }
    
    public String getName() {
        return "VALIDATED";
    }

    public void addParameter(Expression e) {
        throw new IllegalStateException("This function takes 0 parameters");
    }

    public int getParameterCount() {
        return 0;
    }
    
    public String toString() {
        return getName()+"()";
    }

} // end of class ValidatedPredicate@


1.1.2.2
log
@Replaced all tab characters with 4 spaces.
Ensured UNIX style line endings.
@
text
@d40 1
a40 1
} // end of class ValidatedPredicate
@


1.1.2.3
log
@Much more javadoc
@
text
@a10 2
 * Expression that indicates if an item's validated flag is set.
 * 
d16 1
a16 1
    /** Convenience instance for the validated == true case. */
a17 1
    /** Convenience instance for the validated == false case. */
a19 3
    /**
     * Create a new ValidatedPredicate.
     */
a23 3
    /**
     * @@see prefuse.data.expression.Function#getName()
     */
a27 3
    /**
     * @@see prefuse.data.expression.Function#addParameter(prefuse.data.expression.Expression)
     */
a31 3
    /**
     * @@see prefuse.data.expression.Function#getParameterCount()
     */
a35 3
    /**
     * @@see java.lang.Object#toString()
     */
@


1.1.2.4
log
@Standardized @@author tag contents
Added toggle for enabling/disabling damage/redraw
EdgeRenderer now cleanly pulls edge widths from the size field
Refactored TupleManager to a single reusable class
@
text
@d13 1
a13 1
 * @@author <a href="http://jheer.org">jeffrey heer</a>
@


