head	1.2;
access;
symbols
	alpha:1.1.0.2
	Root_alpha:1.1
	prefuse-alpha-20051229:1.1
	P20050401_Alpha_PreCHI:1.1;
locks; strict;
comment	@# @;


1.2
date	2006.02.11.06.38.46;	author jheer;	state dead;
branches;
next	1.1;

1.1
date	2004.03.24.01.57.26;	author jheer;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2005.12.30.09.16.20;	author jheer;	state dead;
branches;
next	;


desc
@@


1.2
log
@Merge beta branch back onto main trunk
@
text
@package edu.berkeley.guir.prefuse.action.assignment;

import java.util.Iterator;

import edu.berkeley.guir.prefuse.VisualItem;
import edu.berkeley.guir.prefuse.ItemRegistry;
import edu.berkeley.guir.prefuse.action.AbstractAction;

/**
 * Simple SizeFunction that blindly returns a size of "1" for all
 * items. Subclasses should override the getSize() method to provide
 * custom size assignment for VisualItems.
 * 
 * @@version 1.0
 * @@author <a href="http://jheer.org">Jeffrey Heer</a> prefuse(AT)jheer.org
 */
public class SizeFunction extends AbstractAction {

	public void run(ItemRegistry registry, double frac) {
		Iterator itemIter = registry.getItems();
		while ( itemIter.hasNext() ) {
			VisualItem item = (VisualItem)itemIter.next();
			double size = getSize(item);
			item.updateSize(size);
			item.setSize(size);
		}
	} //
	
	public double getSize(VisualItem item) {
		return 1;
	} //

} // end of class SizeFunction
@


1.1
log
@New filters added plus more
@
text
@@


1.1.4.1
log
@Initial commit of prefuse beta
@
text
@@

