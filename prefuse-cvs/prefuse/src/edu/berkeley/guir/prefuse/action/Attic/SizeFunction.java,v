head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	2004.03.24.01.57.26;	author jheer;	state dead;
branches;
next	1.4;

1.4
date	2004.03.23.19.34.05;	author jheer;	state Exp;
branches;
next	1.3;

1.3
date	2004.03.23.03.54.55;	author jheer;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.16.03.05.16;	author jheer;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.27.21.35.18;	author jheer;	state Exp;
branches;
next	;


desc
@@


1.5
log
@New filters added plus more
@
text
@package edu.berkeley.guir.prefuse.action;

import java.util.Iterator;

import edu.berkeley.guir.prefuse.VisualItem;
import edu.berkeley.guir.prefuse.ItemRegistry;

/**
 * Simple SizeFunction that blindly returns a size of "1" for all
 * items. Subclasses should override the getSize() method to provide
 * custom size assignment for VisualItems.
 * 
 * @@version 1.0
 * @@author <a href="http://jheer.org">Jeffrey Heer</a> prefuse(AT)jheer.org
 */
public class SizeFunction extends AbstractAction {

	public void run(ItemRegistry registry, double frac) {
		Iterator itemIter = registry.getItems();
		while ( itemIter.hasNext() ) {
			VisualItem item = (VisualItem)itemIter.next();
			double size = getSize(item);
			item.updateSize(size);
			item.setSize(size);
		}
	} //
	
	public double getSize(VisualItem item) {
		return 1;
	} //

} // end of class SizeFunction
@


1.4
log
@More Javadoc updates
@
text
@@


1.3
log
@Major refactor
@
text
@d14 1
a14 1
 * @@author Jeffrey Heer <a href="mailto:jheer@@acm.org">jheer@@acm.org</a>
@


1.2
log
@More Javadoc updates
@
text
@d5 1
a5 1
import edu.berkeley.guir.prefuse.GraphItem;
d11 1
a11 1
 * custom size assignment for GraphItems.
d21 1
a21 1
			GraphItem item = (GraphItem)itemIter.next();
d28 1
a28 1
	public double getSize(GraphItem item) {
@


1.1
log
@Major commit of updated architecture
@
text
@d9 1
a9 1
 * Simple SizeFunction that blindly returns a size of "0" for all
a12 2
 * Apr 30, 2003 - jheer - Created class
 * 
d29 1
a29 1
		return 0;
@

