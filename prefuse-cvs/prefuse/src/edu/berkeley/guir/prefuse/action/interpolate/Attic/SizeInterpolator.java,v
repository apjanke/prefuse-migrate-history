head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2004.03.25.04.35.38;	author jheer;	state dead;
branches;
next	1.1;

1.1
date	2004.03.24.01.57.41;	author jheer;	state Exp;
branches;
next	;


desc
@@


1.2
log
@A whole lot of update
@
text
@package edu.berkeley.guir.prefuse.action.interpolate;

import java.util.Iterator;

import edu.berkeley.guir.prefuse.VisualItem;
import edu.berkeley.guir.prefuse.ItemRegistry;
import edu.berkeley.guir.prefuse.action.AbstractAction;

/**
 * Linearly interpolates the size of a VisualItem.
 * 
 * @@version 1.0
 * @@author <a href="http://jheer.org">Jeffrey Heer</a> prefuse(AT)jheer.org
 */
public class SizeInterpolator extends AbstractAction {

	public static final String ATTR_ANIM_FRAC = "animationFrac";

	/**
	 * @@see edu.berkeley.guir.prefuse.action.Action#run(edu.berkeley.guir.prefuse.ItemRegistry, double)
	 */
	public void run(ItemRegistry registry, double frac) {
		double ss, es, s;		
		
		Iterator itemIter = registry.getItems();
		while ( itemIter.hasNext() ) {
			VisualItem item = (VisualItem)itemIter.next();
			ss = item.getStartSize();
			es = item.getEndSize();						
			s = ss + frac * (es - ss);						
			item.setSize(s);
		}		
	} //

} // end of class SizeInterpolator
@


1.1
log
@New filters added plus more
@
text
@@

