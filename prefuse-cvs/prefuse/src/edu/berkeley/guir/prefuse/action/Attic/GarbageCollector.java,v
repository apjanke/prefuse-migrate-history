head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2004.03.24.01.57.25;	author jheer;	state dead;
branches;
next	1.5;

1.5
date	2004.03.23.19.34.05;	author jheer;	state Exp;
branches;
next	1.4;

1.4
date	2004.03.23.03.54.55;	author jheer;	state Exp;
branches;
next	1.3;

1.3
date	2004.03.16.03.05.16;	author jheer;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.08.21.31.49;	author jheer;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.27.21.35.18;	author jheer;	state Exp;
branches;
next	;


desc
@@


1.6
log
@New filters added plus more
@
text
@package edu.berkeley.guir.prefuse.action;

/**
 * Signals the <code>ItemRegistry</code> to perform a garbage collection 
 * operation. The class type of the <code>VisualItem</code> to garbage
 * collect must be specified through the constructor and/or 
 * <code>addItemClass()</code> method.
 * 
 * @@version 1.0
 * @@author <a href="http://jheer.org">Jeffrey Heer</a> prefuse(AT)jheer.org
 */
public class GarbageCollector extends Filter {
	
    /**
     * Creates a new instance that signals garbage collection for the given
     * item class.
     * @@param itemClass the item class to garbage collect
     */
	public GarbageCollector(String itemClass) {
		super(itemClass, true);
	} //

    /**
     * Creates a new instance that signals garbage collection for the given
     * item classes.
     * @@param itemClasses the item classes to garbage collect
     */
	public GarbageCollector(String[] itemClasses) {
	    super(itemClasses, true);
    } //

} // end of class GarbageCollector
@


1.5
log
@More Javadoc updates
@
text
@@


1.4
log
@Major refactor
@
text
@d10 1
a10 1
 * @@author Jeffrey Heer <a href="mailto:jheer@@acm.org">jheer@@acm.org</a>
@


1.3
log
@More Javadoc updates
@
text
@d5 1
a5 1
 * operation. The class type of the <code>GraphItem</code> to garbage
@


1.2
log
@Moved garbage collection into abstract Filter
@
text
@a8 2
 * Jul 15, 2003 - jheer - Created class
 * 
@


1.1
log
@Major commit of updated architecture
@
text
@a2 2
import edu.berkeley.guir.prefuse.ItemRegistry;

d6 2
a7 2
 * collect must be specified through the constructor or 
 * <code>setType()</code> method.
d14 1
a14 6
public class GarbageCollector extends AbstractAction {
	private String m_itemClass;

	public GarbageCollector() {
		super();
	} //
d16 5
d22 1
a22 9
		m_itemClass = itemClass;
	} //

	public String getItemClass() {
		return m_itemClass;
	} //
	
	public void setItemClass(String itemClass) {
		m_itemClass = itemClass;
d25 8
a32 6
	/**
	 * Make the proper garbage collecting call.
	 */
	public void run(ItemRegistry registry, double frac) {
		registry.garbageCollect(m_itemClass);
	} //
@

