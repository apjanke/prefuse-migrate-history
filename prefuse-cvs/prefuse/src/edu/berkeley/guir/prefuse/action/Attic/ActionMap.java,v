head	1.4;
access;
symbols
	alpha:1.3.0.2
	Root_alpha:1.3
	prefuse-alpha-20051229:1.3
	P20050401_Alpha_PreCHI:1.3;
locks; strict;
comment	@# @;


1.4
date	2006.02.11.06.38.44;	author jheer;	state dead;
branches;
next	1.3;

1.3
date	2004.03.16.03.05.16;	author jheer;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2004.03.07.03.33.02;	author jheer;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.27.21.35.18;	author jheer;	state Exp;
branches;
next	;

1.3.4.1
date	2005.12.30.09.16.19;	author jheer;	state dead;
branches;
next	;


desc
@@


1.4
log
@Merge beta branch back onto main trunk
@
text
@package edu.berkeley.guir.prefuse.action;

import java.util.HashMap;

/**
 * Maps between arbitrary object keys and Action instances. Useful for keeping
 * a store of Action instances for future parameterization.
 *
 * @@version 1.0
 * @@author <a href="http://jheer.org">Jeffrey Heer</a> prefuse(AT)jheer.org
 */
public class ActionMap {

    private HashMap   m_map;
    private ActionMap m_parent;
    
    public ActionMap() {
        this(null);
    } //
    
    public ActionMap(ActionMap parent) {
        m_map = new HashMap();
        m_parent = parent;
    } //
    
    public void clear() {
        m_map.clear();
    } //
    
    public int size() {
        return m_map.size();
    } //
    
    public Action get(Object key) {
        Action a = (Action)m_map.get(key);
        return (a==null && m_parent!=null ? m_parent.get(key) : a);
    } //
    
    public Action put(Object key, Action action) {
        m_map.put(key, action);
        return action;
    } //
    
    public void remove(Object key) {
        m_map.remove(key);
    } //
    
    public Object[] keys() {
        return m_map.keySet().toArray();
    } //
    
    public Object[] allKeys() {
        Object[] a1 = m_map.keySet().toArray();
        if ( m_parent != null ) {
            Object[] a2 = m_parent.allKeys();
            if ( a2 != null && a2.length > 0 ) {
                Object[] o = new Object[a1.length+a2.length];
                System.arraycopy(a1,0,o,0,a1.length);
                System.arraycopy(a2,0,o,a1.length,a2.length);
                return o;
            }
        }
        return a1;
    } //
    
    public void setParent(ActionMap parent) {
        m_parent = parent;
    } //
    
    public ActionMap getParent() {
        return m_parent;
    } //
    
} // end of class ActionMap
@


1.3
log
@More Javadoc updates
@
text
@@


1.3.4.1
log
@Initial commit of prefuse beta
@
text
@@


1.2
log
@Updated action map
@
text
@d6 2
a7 2
 * 
 * Feb 10, 2004 - jheer - Created class
@


1.1
log
@Major commit of updated architecture
@
text
@d39 1
a39 1
    public void put(Object key, Action action) {
d41 1
@

