head	1.3;
access;
symbols
	alpha:1.2.0.2
	Root_alpha:1.2
	prefuse-alpha-20051229:1.2
	P20050401_Alpha_PreCHI:1.2;
locks; strict;
comment	@# @;


1.3
date	2006.02.11.06.38.46;	author jheer;	state dead;
branches;
next	1.2;

1.2
date	2005.04.01.23.47.43;	author jheer;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2004.03.24.01.57.25;	author jheer;	state Exp;
branches;
next	;

1.2.4.1
date	2005.12.30.09.13.31;	author jheer;	state dead;
branches;
next	;


desc
@@


1.3
log
@Merge beta branch back onto main trunk
@
text
@package edu.berkeley.guir.prefuse.action.filter;

import java.util.Iterator;

import edu.berkeley.guir.prefuse.ItemRegistry;
import edu.berkeley.guir.prefuse.NodeItem;
import edu.berkeley.guir.prefuse.graph.Node;

/**
 * Filters graph nodes, allowing all nodes in the graph to be visualized. By
 * default, garbage collection on node items is performed.
 * 
 * @@version 1.0
 * @@author <a href="http://jheer.org">Jeffrey Heer</a> prefuse(AT)jheer.org
 */
public class GraphNodeFilter extends Filter {

    /**
     * Constructor.
     */
    public GraphNodeFilter() {
        super(ItemRegistry.DEFAULT_NODE_CLASS, true);
    } //
    
	public void run(ItemRegistry registry, double frac) {
		Iterator nodeIter = registry.getGraph().getNodes();
		while ( nodeIter.hasNext() ) {
			NodeItem item = registry.getNodeItem((Node)nodeIter.next(), true, true);
        }
        
		// optional garbage collection
        super.run(registry, frac);
	} //

} // end of class GraphNodeFilter
@


1.2
log
@Item access refactored to include a "clear" flag, for consistent semantics separate from the "create" flag
@
text
@@


1.2.4.1
log
@Initial commit of prefuse beta
@
text
@@


1.1
log
@New filters added plus more
@
text
@d28 1
a28 1
			NodeItem item = registry.getNodeItem((Node)nodeIter.next(), true);
@

