head	1.3;
access;
symbols
	alpha:1.2.0.2
	Root_alpha:1.2
	prefuse-alpha-20051229:1.2
	P20050401_Alpha_PreCHI:1.2;
locks; strict;
comment	@# @;


1.3
date	2006.02.11.06.38.46;	author jheer;	state dead;
branches;
next	1.2;

1.2
date	2004.03.12.01.51.51;	author jheer;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2004.01.08.21.10.12;	author jheer;	state Exp;
branches;
next	;

1.2.4.1
date	2005.12.30.09.16.19;	author jheer;	state dead;
branches;
next	;


desc
@@


1.3
log
@Merge beta branch back onto main trunk
@
text
@package edu.berkeley.guir.prefuse.collections;

import java.util.Iterator;
import java.util.List;
import java.util.NoSuchElementException;

/**
 * Iterator for traversing a list starting at an arbitray position in the
 * list, and then wrapping around back to beginning of the list as
 * necessary.
 * 
 * @@version 1.0
 * @@author <a href="http://jheer.org">Jeffrey Heer</a> prefuse(AT)jheer.org
 */
public class WrapAroundIterator implements Iterator {

	private int      m_cur, m_count, m_size;
	private List     m_items;

	/**
	 * Constructor.
	 * @@param items the list to iterator over
	 * @@param start the starting position of the iterator in the list
	 */
	public WrapAroundIterator(List items, int start) {
		this(items, start, items.size()-1);
	} //

	/**
	 * Constructor.
	 * @@param items the list to iterate over
	 * @@param start the starting position of the iterator in the list
	 * @@param limit the maximum index that should be visited by the iterator
	 */
	public WrapAroundIterator(List items, int start, int limit) {
		if ( start > limit ) { 
			throw new IllegalArgumentException(); }
		m_items = items;
		m_cur   = start;
		m_count = 0;
		m_size  = limit+1;
	} //

	/**
	 * @@see java.util.Iterator#hasNext()
	 */
	public boolean hasNext() {
		return ( m_count < m_size );
	} //

	/**
	 * @@see java.util.Iterator#next()
	 */
	public Object next() {
		if ( m_count >= m_size ) {
			throw new NoSuchElementException("Iterator has no next element.");
		} else {
			int idx = m_cur;
			m_cur = ++m_cur % m_size;
			m_count++;
			return m_items.get(idx);
		}
	} //

	/**
	 * @@see java.util.Iterator#remove()
	 */
	public void remove() {
		throw new UnsupportedOperationException("Remove not supported");
	} //

} // end of class WrapAroundIterator
@


1.2
log
@Updated javadoc
@
text
@@


1.2.4.1
log
@Initial commit of prefuse beta
@
text
@@


1.1
log
@Initial import
@
text
@a11 2
 * Apr 28, 2003 - jheer - Created class
 * 
d13 1
a13 1
 * @@author Jeffrey Heer <a href="mailto:jheer@@acm.org">jheer@@acm.org</a>
@

