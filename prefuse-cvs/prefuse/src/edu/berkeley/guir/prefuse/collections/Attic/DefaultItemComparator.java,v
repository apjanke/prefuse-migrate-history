head	1.9;
access;
symbols
	alpha:1.8.0.2
	Root_alpha:1.8
	prefuse-alpha-20051229:1.8
	P20050401_Alpha_PreCHI:1.8;
locks; strict;
comment	@# @;


1.9
date	2006.02.11.06.38.46;	author jheer;	state dead;
branches;
next	1.8;

1.8
date	2005.03.23.02.40.41;	author jheer;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	2005.01.07.02.22.51;	author jheer;	state Exp;
branches;
next	1.6;

1.6
date	2004.04.15.00.35.17;	author jheer;	state Exp;
branches;
next	1.5;

1.5
date	2004.03.25.04.35.38;	author jheer;	state Exp;
branches;
next	1.4;

1.4
date	2004.03.23.19.34.05;	author jheer;	state Exp;
branches;
next	1.3;

1.3
date	2004.03.23.03.54.55;	author jheer;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.27.21.35.46;	author jheer;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.08.21.10.12;	author jheer;	state Exp;
branches;
next	;

1.8.4.1
date	2005.12.30.09.16.19;	author jheer;	state dead;
branches;
next	;


desc
@@


1.9
log
@Merge beta branch back onto main trunk
@
text
@package edu.berkeley.guir.prefuse.collections;

import java.util.Comparator;

import edu.berkeley.guir.prefuse.AggregateItem;
import edu.berkeley.guir.prefuse.EdgeItem;
import edu.berkeley.guir.prefuse.VisualItem;
import edu.berkeley.guir.prefuse.NodeItem;

/**
 * Comparator that sorts items based on type and focus status.
 * 
 * @@version 1.0
 * @@author <a href="http://jheer.org">Jeffrey Heer</a> prefuse(AT)jheer.org
 */
public class DefaultItemComparator implements Comparator {

    protected int score(VisualItem item) {
        int score = 0;
        if ( item instanceof AggregateItem ) {
            score += (1<<5);
        } else if ( item instanceof NodeItem ) {
            score += (1<<4);
        } else if ( item instanceof EdgeItem ) {
            score += (1<<3);
        }
        if ( item.isFocus() ) {
            score += (1<<2);
        }
        if ( item.isHighlighted() ) {
            score += (1<<1);
        }
        
        return score;
    } //
    
	/**
	 * @@see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
	 */
	public int compare(Object o1, Object o2) {
		if ( !(o1 instanceof VisualItem && o2 instanceof VisualItem) ) {
			throw new IllegalArgumentException();
		}
		
		VisualItem item1 = (VisualItem)o1;
		VisualItem item2 = (VisualItem)o2;
        int score1 = score(item1);
        int score2 = score(item2);
		
		if ( item1 instanceof AggregateItem && item2 instanceof AggregateItem ) {
            int s1 = ((AggregateItem)item1).getAggregateSize();
            int s2 = ((AggregateItem)item2).getAggregateSize();
            if ( s1 < s2 )
                score1 += 1;
            else if ( s2 < s1 )
                score2 += 1;
        }
        return (score1<score2 ? -1 : (score1==score2 ? 0 : 1));
	} //

} // end of class DefaultItemComparator
@


1.8
log
@Reworked to use a scoring system
@
text
@@


1.8.4.1
log
@Initial commit of prefuse beta
@
text
@@


1.7
log
@Refined use of highlight flag to effect ordering
@
text
@d18 19
d47 2
a48 3
        
		boolean f1 = item1.isFocus();
		boolean f2 = item2.isFocus();
d50 7
a56 25
        if ( f1 && !f2 )
            return 1;
        else if ( !f1 && f2 )
            return -1;
        
        boolean h1 = item1.isHighlighted();
        boolean h2 = item2.isHighlighted();
        
        boolean n1 = item1 instanceof NodeItem;
        boolean n2 = item2 instanceof NodeItem;
        
        if ( n1 && !n2 )
            return 1;
        else if ( !n1 && n2 )
            return -1;
        else if ( n1 && n2 ) {
            if ( h1 && !h2 )
                return 1;
            else if ( !h1 && h2 )
                return -1;
            else {
                boolean a1 = item1 instanceof AggregateItem;
                boolean a2 = item2 instanceof AggregateItem;
                return (a1 && !a2 ? -1 : (!a1 && a2 ? 1 : 0));
            }
d58 1
a58 14
        
        boolean e1 = item1 instanceof EdgeItem;
        boolean e2 = item2 instanceof EdgeItem;
        
        if ( e1 && !e2 )
            return 1;
        else if ( !e1 && e2 )
            return -1;
        else if ( h1 && !h2 )
                return 1;
        else if ( !h1 && h2 )
            return -1;
        else
            return 0;
@


1.6
log
@Application-driven updates
@
text
@a39 5
        if ( h1 && !h2 )
            return 1;
        else if ( !h1 && h2 )
            return -1;
        
d48 9
a56 3
            boolean a1 = item1 instanceof AggregateItem;
            boolean a2 = item2 instanceof AggregateItem;
            return (a1 && !a2 ? -1 : (!a1 && a2 ? 1 : 0));
d66 4
d71 1
a71 1
            return 0;	
@


1.5
log
@A whole lot of update
@
text
@d37 8
@


1.4
log
@More Javadoc updates
@
text
@d32 27
a58 27
		if ( item1 instanceof NodeItem ) {
			if ( item2 instanceof NodeItem ) {
				return ( f1 && !f2 ? 1 : (!f1 && f2 ? -1 : 0) );			
			} else {
				return 1;
			}
		} else if ( item2 instanceof NodeItem ) {
			return -1;
		} else if ( item1 instanceof EdgeItem ) {
			if ( item2 instanceof EdgeItem ) {
				return ( f1 && !f2 ? 1 : (!f1 && f2 ? -1 : 0) );
			} else {
				return 1;
			}
		} else if ( item2 instanceof EdgeItem ) {
			return -1;
		} else if ( item1 instanceof AggregateItem ) {
			if ( item2 instanceof AggregateItem ) {
				return ( f1 && !f2 ? 1 : (!f1 && f2 ? -1 : 0) );
			} else {
				return 1;
			}
		} else if ( item2 instanceof AggregateItem ) {
			return -1;
		} else {
			return 0;
		}		
@


1.3
log
@Major refactor
@
text
@a12 2
 * Jul 9, 2003 - jheer - Created class
 * 
d14 1
a14 1
 * @@author Jeffrey Heer <a href="mailto:jheer@@acm.org">jheer@@acm.org</a>
@


1.2
log
@Major commit of updated architecture
@
text
@d7 1
a7 1
import edu.berkeley.guir.prefuse.GraphItem;
d24 1
a24 1
		if ( !(o1 instanceof GraphItem && o2 instanceof GraphItem) ) {
d28 2
a29 2
		GraphItem item1 = (GraphItem)o1;
		GraphItem item2 = (GraphItem)o2;
@


1.1
log
@Initial import
@
text
@d30 3
a32 3
		
		boolean f1 = item1.getItemRegistry().isFocus(item1);
		boolean f2 = item2.getItemRegistry().isFocus(item2);
@

