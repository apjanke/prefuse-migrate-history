head	1.4;
access;
symbols
	alpha:1.3.0.2
	Root_alpha:1.3
	prefuse-alpha-20051229:1.3
	P20050401_Alpha_PreCHI:1.3;
locks; strict;
comment	@# @;


1.4
date	2006.02.11.06.38.42;	author jheer;	state dead;
branches;
next	1.3;

1.3
date	2005.01.14.23.13.04;	author jheer;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2004.03.25.04.35.38;	author jheer;	state Exp;
branches;
next	1.1;

1.1
date	2004.03.24.01.57.26;	author jheer;	state Exp;
branches;
next	;

1.3.4.1
date	2005.12.30.09.16.20;	author jheer;	state dead;
branches;
next	;


desc
@@


1.4
log
@Merge beta branch back onto main trunk
@
text
@package edu.berkeley.guir.prefuse.demos;

import java.awt.geom.Rectangle2D;
import java.util.Iterator;

import javax.swing.BorderFactory;
import javax.swing.JFrame;

import edu.berkeley.guir.prefuse.Display;
import edu.berkeley.guir.prefuse.ItemRegistry;
import edu.berkeley.guir.prefuse.VisualItem;
import edu.berkeley.guir.prefuse.action.ActionMap;
import edu.berkeley.guir.prefuse.action.RepaintAction;
import edu.berkeley.guir.prefuse.action.assignment.ColorFunction;
import edu.berkeley.guir.prefuse.action.assignment.Layout;
import edu.berkeley.guir.prefuse.action.filter.GraphFilter;
import edu.berkeley.guir.prefuse.activity.ActionList;
import edu.berkeley.guir.prefuse.activity.ActivityMap;
import edu.berkeley.guir.prefuse.graph.Graph;
import edu.berkeley.guir.prefuse.graph.GraphLib;
import edu.berkeley.guir.prefuse.render.DefaultRendererFactory;
import edu.berkeley.guir.prefuse.render.TextItemRenderer;
import edu.berkeley.guir.prefusex.controls.AnchorUpdateControl;
import edu.berkeley.guir.prefusex.controls.FocusControl;
import edu.berkeley.guir.prefusex.distortion.FisheyeDistortion;

/**
 * 
 *
 * @@version 1.0
 * @@author <a href="http://jheer.org">Jeffrey Heer</a> prefuse(AT)jheer.org
 */
public class FisheyeMenuDemo extends JFrame {

    private ActivityMap  activityMap = new ActivityMap();
    private ActionMap    actionMap   = new ActionMap();
    
    public FisheyeMenuDemo() {
        super("FisheyeMenu");
        
        Graph g = GraphLib.getNodes(201);
        
        ItemRegistry registry = new ItemRegistry(g);
        
        TextItemRenderer nodeRenderer = new TextItemRenderer();
        nodeRenderer.setRenderType(TextItemRenderer.RENDER_TYPE_NONE);
        nodeRenderer.setHorizontalPadding(0);
        nodeRenderer.setVerticalPadding(1);
        nodeRenderer.setHorizontalAlignment(TextItemRenderer.ALIGNMENT_LEFT);
        registry.setRendererFactory(new DefaultRendererFactory(nodeRenderer));
        
        Display display = new Display(registry);
        display.setSize(100,470);
        display.setBorder(BorderFactory.createEmptyBorder(5,15,5,5));
        display.addControlListener(new FocusControl(0));
        
        ActionList init = new ActionList(registry);
        init.add(new GraphFilter());
        init.add(new VerticalLineLayout());
        init.add(new RepaintAction());

        ActionList distort = new ActionList(registry);
        FisheyeDistortion feye = new FisheyeDistortion(0,8);
        distort.add(feye);
        distort.add(new ColorFunction());
        distort.add(new RepaintAction());
        
        // create and display application window
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        getContentPane().add(display);
        pack();
        setVisible(true);
        
        init.runNow();
        
        // enable distortion mouse-over
        AnchorUpdateControl auc = new AnchorUpdateControl(feye, distort);
        display.addMouseListener(auc);
        display.addMouseMotionListener(auc);
    } //
    
    public static void main(String[] args) {
        new FisheyeMenuDemo();
    } //
    
    public class VerticalLineLayout extends Layout {
        public void run(ItemRegistry registry, double frac) {
            // first pass
            double h = 0;
            Iterator iter = registry.getNodeItems();
            while ( iter.hasNext() ) {
                VisualItem item = (VisualItem)iter.next();
                h += item.getBounds().getHeight();
            }
            
            Rectangle2D bounds = getLayoutBounds(registry);
            double scale = bounds.getHeight() / h;
            
            // second pass
            h = bounds.getMinY();
            double ih, y, x=bounds.getMinX();
            iter = registry.getNodeItems();
            while ( iter.hasNext() ) {
                VisualItem item = (VisualItem)iter.next();
                item.updateSize(scale);
                item.setSize(scale);
                ih = item.getBounds().getHeight();
                y = h+(ih/2);
                setLocation(item,null,x,y);
                h += ih;
            }
        }
    } //
    
} // end of class FisheyeMenuDemo
@


1.3
log
@Some facelifts and updates to the prefuse demos
@
text
@@


1.3.4.1
log
@Initial commit of prefuse beta
@
text
@@


1.2
log
@A whole lot of update
@
text
@d50 1
a50 2
        registry.setRendererFactory(new DefaultRendererFactory(
            nodeRenderer, null, null));
@


1.1
log
@New filters added plus more
@
text
@a2 5
import java.awt.Rectangle;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Point2D;
d6 1
d14 1
d23 3
a25 2
import edu.berkeley.guir.prefusex.controls.DragControl;
import edu.berkeley.guir.prefusex.distortion.BifocalDistortion;
a28 1
 * Mar 23, 2004 - jheer - Created class
d39 1
a39 1
        super("FisheyeMenuDemo");
d41 1
a41 1
        Graph g = GraphLib.getStar(100);
d47 2
d54 3
a56 2
        display.setSize(200,800);
        display.addControlListener(new DragControl());
d59 1
a59 1
        init.add(new GraphFilter(false));
d62 1
a62 1
        
d64 3
a66 2
        distort.add(actionMap.put("distort",
            new BifocalDistortion(0.0,1.0,0.1,3)));
a67 1
        activityMap.put("distortion",distort);
d78 3
a80 3
        DistortionController dc = new DistortionController();
        display.addMouseListener(dc);
        display.addMouseMotionListener(dc);
a86 20
    class DistortionController extends MouseAdapter implements MouseMotionListener {
        Point2D tmp = new Point2D.Float();
        public void mouseExited(MouseEvent e) {
            ((Layout)actionMap.get("distort")).setLayoutAnchor(null);
            activityMap.scheduleNow("distortion");
        } //
        public void mouseMoved(MouseEvent e) {
            moveEvent(e);
        } //
        public void mouseDragged(MouseEvent e) {
            moveEvent(e);
        } //
        public void moveEvent(MouseEvent e) {
            Display d = (Display)e.getSource();
            d.getAbsoluteCoordinate(e.getPoint(), tmp);
            ((Layout)actionMap.get("distort")).setLayoutAnchor(tmp);
            activityMap.scheduleNow("distortion");
        } //
    } // end of inner class DistortionController
    
d94 1
a94 1
                h += item.getBounds().height;
d101 2
a102 2
            h = 0;
            double ih,x,y;
d108 1
a108 4
                Rectangle b = item.getBounds();
                ih = b.height;
                System.out.println("ih = "+ih);
                x = 5;
d110 1
a110 2
                item.updateLocation(x,y);
                item.setLocation(x,y);
@

